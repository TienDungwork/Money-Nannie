'use client';

import React, { useState } from 'react';
import { X, Search } from 'lucide-react';

export interface IconItem {
  key: string;
  icon: string;
  name: string;
  category: string;
}

interface IconPickerProps {
  isOpen: boolean;
  onClose: () => void;
  onSelectIcon: (iconKey: string) => void;
  selectedIcon?: string;
}

const iconCategories = [
  { key: 'all', name: 'T·∫•t c·∫£', emoji: 'üìã' },
  { key: 'money', name: 'Ti·ªÅn t·ªá', emoji: 'üí∞' },
  { key: 'food', name: 'ƒÇn u·ªëng', emoji: 'üçΩÔ∏è' },
  { key: 'transport', name: 'Di chuy·ªÉn', emoji: 'üöó' },
  { key: 'home', name: 'Nh√† c·ª≠a', emoji: 'üè†' },
  { key: 'shopping', name: 'Mua s·∫Øm', emoji: 'üõçÔ∏è' },
  { key: 'entertainment', name: 'Gi·∫£i tr√≠', emoji: 'üéÆ' },
  { key: 'health', name: 'S·ª©c kh·ªèe', emoji: 'üè•' },
  { key: 'education', name: 'Gi√°o d·ª•c', emoji: 'üìö' },
  { key: 'work', name: 'C√¥ng vi·ªác', emoji: 'üíº' },
  { key: 'other', name: 'Kh√°c', emoji: 'üîß' },
];

const allIcons: IconItem[] = [
  // Ti·ªÅn t·ªá
  { key: 'DollarSign', icon: 'üí≤', name: 'Ti·ªÅn', category: 'money' },
  { key: 'Banknote', icon: 'üíµ', name: 'Ti·ªÅn m·∫∑t', category: 'money' },
  { key: 'CreditCard', icon: 'üí≥', name: 'Th·∫ª t√≠n d·ª•ng', category: 'money' },
  { key: 'Wallet', icon: 'üëõ', name: 'V√≠', category: 'money' },
  { key: 'PiggyBank', icon: 'üê∑', name: 'Ti·∫øt ki·ªám', category: 'money' },
  { key: 'TrendingUp', icon: 'üìà', name: 'ƒê·∫ßu t∆∞', category: 'money' },
  { key: 'HandCoins', icon: 'ü§≤', name: 'Cho vay', category: 'money' },
  { key: 'Receipt', icon: 'üßæ', name: 'H√≥a ƒë∆°n', category: 'money' },

  // ƒÇn u·ªëng
  { key: 'UtensilsCrossed', icon: 'üçΩÔ∏è', name: 'ƒÇn u·ªëng', category: 'food' },
  { key: 'Coffee', icon: '‚òï', name: 'C√† ph√™', category: 'food' },
  { key: 'Pizza', icon: 'üçï', name: 'Pizza', category: 'food' },
  { key: 'ChefHat', icon: 'üë®‚Äçüç≥', name: 'Nh√† h√†ng', category: 'food' },
  { key: 'Cake', icon: 'üéÇ', name: 'B√°nh ng·ªçt', category: 'food' },
  { key: 'Beer', icon: 'üç∫', name: 'ƒê·ªì u·ªëng c√≥ c·ªìn', category: 'food' },
  { key: 'Apple', icon: 'üçé', name: 'Tr√°i c√¢y', category: 'food' },
  { key: 'Bread', icon: 'üçû', name: 'B√°nh m√¨', category: 'food' },
  { key: 'Rice', icon: 'üçö', name: 'C∆°m', category: 'food' },
  { key: 'Noodles', icon: 'üçú', name: 'M√¨', category: 'food' },

  // Di chuy·ªÉn
  { key: 'Car', icon: 'üöó', name: 'Xe h∆°i', category: 'transport' },
  { key: 'Fuel', icon: '‚õΩ', name: 'XƒÉng', category: 'transport' },
  { key: 'Bus', icon: 'üöå', name: 'Xe bu√Ωt', category: 'transport' },
  { key: 'Train', icon: 'üöä', name: 'T√†u ƒëi·ªán', category: 'transport' },
  { key: 'Plane', icon: '‚úàÔ∏è', name: 'M√°y bay', category: 'transport' },
  { key: 'Bike', icon: 'üö≤', name: 'Xe ƒë·∫°p', category: 'transport' },
  { key: 'Motorcycle', icon: 'üèçÔ∏è', name: 'Xe m√°y', category: 'transport' },
  { key: 'Taxi', icon: 'üöï', name: 'Taxi', category: 'transport' },
  { key: 'ParkingCircle', icon: 'üÖøÔ∏è', name: 'ƒê·∫≠u xe', category: 'transport' },
  { key: 'Wrench', icon: 'üîß', name: 'S·ª≠a ch·ªØa', category: 'transport' },

  // Nh√† c·ª≠a
  { key: 'Home', icon: 'üè†', name: 'Nh√†', category: 'home' },
  { key: 'Zap', icon: '‚ö°', name: 'ƒêi·ªán', category: 'home' },
  { key: 'Droplets', icon: 'üíß', name: 'N∆∞·ªõc', category: 'home' },
  { key: 'Wifi', icon: 'üì∂', name: 'Internet', category: 'home' },
  { key: 'Tv', icon: 'üì∫', name: 'TV', category: 'home' },
  { key: 'Flame', icon: 'üî•', name: 'Gas', category: 'home' },
  { key: 'Bed', icon: 'üõèÔ∏è', name: 'Gi∆∞·ªùng', category: 'home' },
  { key: 'Sofa', icon: 'üõãÔ∏è', name: 'Gh·∫ø sofa', category: 'home' },
  { key: 'Bath', icon: 'üõÅ', name: 'Ph√≤ng t·∫Øm', category: 'home' },
  { key: 'Kitchen', icon: 'üç≥', name: 'Nh√† b·∫øp', category: 'home' },

  // Mua s·∫Øm
  { key: 'ShoppingBag', icon: 'üõçÔ∏è', name: 'Mua s·∫Øm', category: 'shopping' },
  { key: 'ShoppingCart', icon: 'üõí', name: 'Gi·ªè h√†ng', category: 'shopping' },
  { key: 'Gift', icon: 'üéÅ', name: 'Qu√† t·∫∑ng', category: 'shopping' },
  { key: 'Shirt', icon: 'üëï', name: 'Qu·∫ßn √°o', category: 'shopping' },
  { key: 'Shoes', icon: 'üëü', name: 'Gi√†y d√©p', category: 'shopping' },
  { key: 'Watch', icon: '‚åö', name: 'ƒê·ªìng h·ªì', category: 'shopping' },
  { key: 'Bag', icon: 'üéí', name: 'T√∫i x√°ch', category: 'shopping' },
  { key: 'Glasses', icon: 'üëì', name: 'K√≠nh m·∫Øt', category: 'shopping' },
  { key: 'Sparkles', icon: '‚ú®', name: 'L√†m ƒë·∫πp', category: 'shopping' },
  { key: 'Perfume', icon: 'üß¥', name: 'N∆∞·ªõc hoa', category: 'shopping' },

  // Gi·∫£i tr√≠
  { key: 'GameController', icon: 'üéÆ', name: 'Game', category: 'entertainment' },
  { key: 'Music', icon: 'üéµ', name: '√Çm nh·∫°c', category: 'entertainment' },
  { key: 'Movie', icon: 'üé¨', name: 'Phim ·∫£nh', category: 'entertainment' },
  { key: 'Camera', icon: 'üì∑', name: 'Ch·ª•p ·∫£nh', category: 'entertainment' },
  { key: 'Book', icon: 'üìñ', name: 'ƒê·ªçc s√°ch', category: 'entertainment' },
  { key: 'Sport', icon: '‚öΩ', name: 'Th·ªÉ thao', category: 'entertainment' },
  { key: 'Gym', icon: 'üèãÔ∏è', name: 'Gym', category: 'entertainment' },
  { key: 'Swimming', icon: 'üèä', name: 'B∆°i l·ªôi', category: 'entertainment' },
  { key: 'Travel', icon: 'üß≥', name: 'Du l·ªãch', category: 'entertainment' },
  { key: 'Beach', icon: 'üèñÔ∏è', name: 'B√£i bi·ªÉn', category: 'entertainment' },

  // S·ª©c kh·ªèe
  { key: 'Hospital', icon: 'üè•', name: 'B·ªánh vi·ªán', category: 'health' },
  { key: 'Medicine', icon: 'üíä', name: 'Thu·ªëc', category: 'health' },
  { key: 'Doctor', icon: 'üë®‚Äç‚öïÔ∏è', name: 'B√°c sƒ©', category: 'health' },
  { key: 'Stethoscope', icon: 'ü©∫', name: 'Kh√°m b·ªánh', category: 'health' },
  { key: 'Syringe', icon: 'üíâ', name: 'Ti√™m ch√≠ch', category: 'health' },
  { key: 'Dental', icon: 'ü¶∑', name: 'Nha khoa', category: 'health' },
  { key: 'Glasses2', icon: 'üëì', name: 'M·∫Øt k√≠nh', category: 'health' },
  { key: 'Heart', icon: '‚ù§Ô∏è', name: 'Tim m·∫°ch', category: 'health' },

  // Gi√°o d·ª•c
  { key: 'School', icon: 'üè´', name: 'Tr∆∞·ªùng h·ªçc', category: 'education' },
  { key: 'BookOpen', icon: 'üìö', name: 'S√°ch gi√°o khoa', category: 'education' },
  { key: 'Pencil', icon: '‚úèÔ∏è', name: 'B√∫t ch√¨', category: 'education' },
  { key: 'Calculator', icon: 'üî¢', name: 'M√°y t√≠nh', category: 'education' },
  { key: 'Computer', icon: 'üíª', name: 'M√°y t√≠nh', category: 'education' },
  { key: 'Graduation', icon: 'üéì', name: 'T·ªët nghi·ªáp', category: 'education' },
  { key: 'Certificate', icon: 'üìú', name: 'Ch·ª©ng ch·ªâ', category: 'education' },

  // C√¥ng vi·ªác
  { key: 'Briefcase', icon: 'üíº', name: 'C√¥ng vi·ªác', category: 'work' },
  { key: 'Office', icon: 'üè¢', name: 'VƒÉn ph√≤ng', category: 'work' },
  { key: 'Phone', icon: 'üì±', name: 'ƒêi·ªán tho·∫°i', category: 'work' },
  { key: 'Email', icon: 'üìß', name: 'Email', category: 'work' },
  { key: 'Calendar', icon: 'üìÖ', name: 'L·ªãch', category: 'work' },
  { key: 'Meeting', icon: 'üë•', name: 'H·ªçp', category: 'work' },
  { key: 'Presentation', icon: 'üìä', name: 'Thuy·∫øt tr√¨nh', category: 'work' },

  // Kh√°c
  { key: 'User', icon: 'üë§', name: 'C√° nh√¢n', category: 'other' },
  { key: 'Family', icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶', name: 'Gia ƒë√¨nh', category: 'other' },
  { key: 'Pet', icon: 'üêï', name: 'Th√∫ c∆∞ng', category: 'other' },
  { key: 'Insurance', icon: 'üõ°Ô∏è', name: 'B·∫£o hi·ªÉm', category: 'other' },
  { key: 'Tax', icon: 'üßæ', name: 'Thu·∫ø', category: 'other' },
  { key: 'Charity', icon: 'ü§ù', name: 'T·ª´ thi·ªán', category: 'other' },
  { key: 'Tools', icon: 'üî®', name: 'C√¥ng c·ª•', category: 'other' },
  { key: 'Settings', icon: '‚öôÔ∏è', name: 'C√†i ƒë·∫∑t', category: 'other' },
  { key: 'Star', icon: '‚≠ê', name: 'Y√™u th√≠ch', category: 'other' },
  { key: 'Question', icon: '‚ùì', name: 'Kh√¥ng x√°c ƒë·ªãnh', category: 'other' },
];

export function IconPicker({ isOpen, onClose, onSelectIcon, selectedIcon }: IconPickerProps) {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');

  const filteredIcons = allIcons.filter(icon => {
    const matchesCategory = selectedCategory === 'all' || icon.category === selectedCategory;
    const matchesSearch = searchQuery === '' || 
      icon.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      icon.key.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60] p-4 animate-in fade-in duration-200">
      <div className="bg-white rounded-2xl w-full max-w-md h-[600px] flex flex-col overflow-hidden animate-in slide-in-from-bottom duration-300 ease-out">
        {/* Header */}
        <div className="sticky top-0 bg-white border-b border-gray-100 p-4 rounded-t-2xl">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-lg font-semibold text-gray-900">Ch·ªçn bi·ªÉu t∆∞·ª£ng</h2>
            <button onClick={onClose} className="text-gray-500 hover:text-gray-700">
              <X size={24} />
            </button>
          </div>
          
          {/* Search */}
          <div className="relative">
            <Search size={16} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
            <input
              type="text"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              placeholder="T√¨m ki·∫øm bi·ªÉu t∆∞·ª£ng..."
              className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
            />
          </div>
        </div>

        {/* Category Tabs */}
        <div className="flex overflow-x-auto scrollbar-hide border-b border-gray-100 px-2">
          {iconCategories.map((category) => (
            <button
              key={category.key}
              onClick={() => setSelectedCategory(category.key)}
              className={`flex-shrink-0 flex flex-col items-center p-3 min-w-[70px] transition-colors ${
                selectedCategory === category.key
                  ? 'text-green-600 border-b-2 border-green-600 bg-green-50'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
            >
              <span className="text-lg mb-1">{category.emoji}</span>
              <span className="text-xs font-medium">{category.name}</span>
            </button>
          ))}
        </div>

        {/* Icons Grid */}
        <div className="flex-1 overflow-y-auto p-4">
          <div className="grid grid-cols-6 gap-3">
            {filteredIcons.map((iconItem) => (
              <button
                key={iconItem.key}
                onClick={() => {
                  onSelectIcon(iconItem.key);
                  onClose();
                }}
                className={`p-3 rounded-xl border-2 transition-all duration-200 hover:scale-105 ${
                  selectedIcon === iconItem.key
                    ? 'border-green-500 bg-green-50 shadow-md'
                    : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'
                }`}
                title={iconItem.name}
              >
                <span className="text-2xl">{iconItem.icon}</span>
              </button>
            ))}
          </div>
          
          {filteredIcons.length === 0 && (
            <div className="text-center py-8">
              <p className="text-gray-500">Kh√¥ng t√¨m th·∫•y bi·ªÉu t∆∞·ª£ng ph√π h·ª£p</p>
            </div>
          )}
        </div>

        {/* Footer */}
        <div className="p-4 border-t border-gray-200 bg-gray-50">
          <div className="flex items-center justify-between text-sm text-gray-600">
            <span>{filteredIcons.length} bi·ªÉu t∆∞·ª£ng</span>
            <span>Nh·∫•n ƒë·ªÉ ch·ªçn</span>
          </div>
        </div>
      </div>
    </div>
  );
}